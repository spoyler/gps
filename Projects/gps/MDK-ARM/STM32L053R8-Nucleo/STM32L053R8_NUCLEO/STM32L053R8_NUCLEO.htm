<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32L053R8_NUCLEO\STM32L053R8_NUCLEO.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32L053R8_NUCLEO\STM32L053R8_NUCLEO.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sun Feb 21 21:28:25 2016
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; connect &rArr; sim900_read_buffer &rArr; millis
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7c]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7c]">ADC1_COMP_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[79]">DMA1_Channel1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7a]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7b]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6d]">DebugMon_Handler</a> from stm32l0xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[75]">EXTI0_1_IRQHandler</a> from stm32l0xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[76]">EXTI2_3_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[77]">EXTI4_15_IRQHandler</a> from stm32l0xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[73]">FLASH_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6b]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[82]">I2C1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[83]">I2C2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[89]">LCD_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7d]">LPTIM1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[16]">LSM6DS0_G_Check_WhoAmI</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Check_WhoAmI) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[12]">LSM6DS0_G_DeInit</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_DeInit) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[17]">LSM6DS0_G_Get_Axes</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Axes) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[18]">LSM6DS0_G_Get_AxesRaw</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_AxesRaw) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[20]">LSM6DS0_G_Get_Axes_Status</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Axes_Status) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1d]">LSM6DS0_G_Get_FS</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_FS) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1a]">LSM6DS0_G_Get_ODR</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_ODR) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[19]">LSM6DS0_G_Get_Sensitivity</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Sensitivity) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[15]">LSM6DS0_G_Get_WhoAmI</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_WhoAmI) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[11]">LSM6DS0_G_Init</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Init) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[14]">LSM6DS0_G_Sensor_Disable</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Sensor_Disable) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[13]">LSM6DS0_G_Sensor_Enable</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Sensor_Enable) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[21]">LSM6DS0_G_Set_Axes_Status</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_Axes_Status) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1e]">LSM6DS0_G_Set_FS</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_FS) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1f]">LSM6DS0_G_Set_FS_Value</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_FS_Value) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1b]">LSM6DS0_G_Set_ODR</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1c]">LSM6DS0_G_Set_ODR_Value</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR_Value) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5]">LSM6DS0_X_Check_WhoAmI</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Check_WhoAmI) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[1]">LSM6DS0_X_DeInit</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_DeInit) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6]">LSM6DS0_X_Get_Axes</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Axes) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7]">LSM6DS0_X_Get_AxesRaw</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_AxesRaw) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[f]">LSM6DS0_X_Get_Axes_Status</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Axes_Status) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[c]">LSM6DS0_X_Get_FS</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_FS) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[9]">LSM6DS0_X_Get_ODR</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_ODR) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8]">LSM6DS0_X_Get_Sensitivity</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Sensitivity) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4]">LSM6DS0_X_Get_WhoAmI</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_WhoAmI) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[0]">LSM6DS0_X_Init</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Init) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3]">LSM6DS0_X_Sensor_Disable</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Sensor_Disable) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2]">LSM6DS0_X_Sensor_Enable</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Sensor_Enable) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[10]">LSM6DS0_X_Set_Axes_Status</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_Axes_Status) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[d]">LSM6DS0_X_Set_FS</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_FS) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[e]">LSM6DS0_X_Set_FS_Value</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_FS_Value) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[a]">LSM6DS0_X_Set_ODR</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[b]">LSM6DS0_X_Set_ODR_Value</a> from lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR_Value) referenced 2 times from lsm6ds0_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5d]">LSM6DS3_G_Check_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Check_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[59]">LSM6DS3_G_DeInit</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_DeInit) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5e]">LSM6DS3_G_Get_Axes</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5f]">LSM6DS3_G_Get_AxesRaw</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_AxesRaw) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[67]">LSM6DS3_G_Get_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[64]">LSM6DS3_G_Get_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[61]">LSM6DS3_G_Get_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[60]">LSM6DS3_G_Get_Sensitivity</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Sensitivity) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5c]">LSM6DS3_G_Get_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[58]">LSM6DS3_G_Init</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Init) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5b]">LSM6DS3_G_Sensor_Disable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Disable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5a]">LSM6DS3_G_Sensor_Enable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Enable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[68]">LSM6DS3_G_Set_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[65]">LSM6DS3_G_Set_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[66]">LSM6DS3_G_Set_FS_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[62]">LSM6DS3_G_Set_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[63]">LSM6DS3_G_Set_ODR_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4c]">LSM6DS3_X_Check_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Check_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[48]">LSM6DS3_X_DeInit</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_DeInit) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3f]">LSM6DS3_X_Disable_6D_Orientation</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_6D_Orientation) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[38]">LSM6DS3_X_Disable_Double_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Double_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[23]">LSM6DS3_X_Disable_Free_Fall_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Free_Fall_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[27]">LSM6DS3_X_Disable_Pedometer</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Pedometer) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[35]">LSM6DS3_X_Disable_Single_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Single_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2b]">LSM6DS3_X_Disable_Step_Counter_Reset</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Step_Counter_Reset) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2e]">LSM6DS3_X_Disable_Tilt_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Tilt_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[31]">LSM6DS3_X_Disable_Wake_Up_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Wake_Up_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3e]">LSM6DS3_X_Enable_6D_Orientation</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_6D_Orientation) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[37]">LSM6DS3_X_Enable_Double_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Double_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[22]">LSM6DS3_X_Enable_Free_Fall_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Free_Fall_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[26]">LSM6DS3_X_Enable_Pedometer</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Pedometer) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[34]">LSM6DS3_X_Enable_Single_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Single_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2a]">LSM6DS3_X_Enable_Step_Counter_Reset</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Step_Counter_Reset) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2d]">LSM6DS3_X_Enable_Tilt_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Tilt_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[30]">LSM6DS3_X_Enable_Wake_Up_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Wake_Up_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[40]">LSM6DS3_X_Get_6D_Orientation_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[42]">LSM6DS3_X_Get_6D_Orientation_XH</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XH) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[41]">LSM6DS3_X_Get_6D_Orientation_XL</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XL) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[44]">LSM6DS3_X_Get_6D_Orientation_YH</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YH) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[43]">LSM6DS3_X_Get_6D_Orientation_YL</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YL) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[46]">LSM6DS3_X_Get_6D_Orientation_ZH</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZH) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[45]">LSM6DS3_X_Get_6D_Orientation_ZL</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZL) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4d]">LSM6DS3_X_Get_Axes</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4e]">LSM6DS3_X_Get_AxesRaw</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_AxesRaw) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[56]">LSM6DS3_X_Get_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[39]">LSM6DS3_X_Get_Double_Tap_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Double_Tap_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[53]">LSM6DS3_X_Get_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[24]">LSM6DS3_X_Get_Free_Fall_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Free_Fall_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[50]">LSM6DS3_X_Get_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[28]">LSM6DS3_X_Get_Pedometer_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Pedometer_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4f]">LSM6DS3_X_Get_Sensitivity</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Sensitivity) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[36]">LSM6DS3_X_Get_Single_Tap_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Single_Tap_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[29]">LSM6DS3_X_Get_Step_Count</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Step_Count) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2f]">LSM6DS3_X_Get_Tilt_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Tilt_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[32]">LSM6DS3_X_Get_Wake_Up_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Wake_Up_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4b]">LSM6DS3_X_Get_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[47]">LSM6DS3_X_Init</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Init) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4a]">LSM6DS3_X_Sensor_Disable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Disable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[49]">LSM6DS3_X_Sensor_Enable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Enable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[57]">LSM6DS3_X_Set_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[54]">LSM6DS3_X_Set_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[55]">LSM6DS3_X_Set_FS_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[25]">LSM6DS3_X_Set_Free_Fall_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Free_Fall_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[51]">LSM6DS3_X_Set_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[52]">LSM6DS3_X_Set_ODR_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[2c]">LSM6DS3_X_Set_Pedometer_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Pedometer_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3d]">LSM6DS3_X_Set_Tap_Duration_Time</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Duration_Time) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3c]">LSM6DS3_X_Set_Tap_Quiet_Time</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Quiet_Time) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3b]">LSM6DS3_X_Set_Tap_Shock_Time</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Shock_Time) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[3a]">LSM6DS3_X_Set_Tap_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[33]">LSM6DS3_X_Set_Wake_Up_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Wake_Up_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6a]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[71]">PVD_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6e]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[74]">RCC_CRS_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[88]">RNG_LPUART1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[72]">RTC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[69]">Reset_Handler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[84]">SPI1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[85]">SPI2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6c]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6f]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[8c]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l053xx.o(.text)
 <LI><a href="#[80]">TIM21_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[81]">TIM22_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7e]">TIM2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7f]">TIM6_DAC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[78]">TSC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[86]">USART1_IRQHandler</a> from main.o(i.USART1_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[87]">USART2_IRQHandler</a> from main.o(i.USART2_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[8a]">USB_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[70]">WWDG_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[8d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l053xx.o(.text)
 <LI><a href="#[8f]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[8e]">fputc</a> from debug.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[8b]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[8d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(.text)
</UL>
<P><STRONG><a name="[17d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[90]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a0]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[17e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[17f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[180]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[181]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[182]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[69]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>RNG_LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[183]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[184]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[185]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[186]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS0_ACCELERO_Init
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_wait_for_resp
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[16b]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSIMStatus
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_connected
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
</UL>

<P><STRONG><a name="[176]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_wait_for_resp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_ul2d</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dfltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ul2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[189]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Disabled
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS_Value
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value_When_Enabled
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value_When_Disabled
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_FS_Value
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Enabled
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Disabled
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_FS_Value
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Disabled
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS_Value
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[98]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[96]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[91]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[18e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>BSP_ACCELERO_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, x_nucleo_iks01a1_accelero.o(i.BSP_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BSP_ACCELERO_Init &rArr; BSP_LSM6DS3_ACCELERO_Init &rArr; LSM6DS3_Sensor_IO_ITConfig &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS0_ACCELERO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>BSP_PB_Init</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32l0xx_nucleo.o(i.BSP_PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BSP_PB_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.EXTI0_1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.EXTI4_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>Error_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>GPIO_Init</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, main.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_Init &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[a8]"></a>HAL_GPIO_Init</STRONG> (Thumb, 462 bytes, Stack size 20 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>

<P><STRONG><a name="[ac]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerUpDown
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[af]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[b0]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>

<P><STRONG><a name="[d7]"></a>HAL_I2C_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>

<P><STRONG><a name="[b2]"></a>HAL_I2C_Init</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>

<P><STRONG><a name="[b4]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 384 bytes, Stack size 48 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_ReadData
</UL>

<P><STRONG><a name="[b9]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 386 bytes, Stack size 48 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_WriteData
</UL>

<P><STRONG><a name="[b1]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[b3]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[15c]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bc]"></a>HAL_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>HAL_InitTick</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[be]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[aa]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>

<P><STRONG><a name="[ad]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>

<P><STRONG><a name="[c3]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 748 bytes, Stack size 16 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[bf]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[c5]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[c6]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[c4]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[c7]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1478 bytes, Stack size 16 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[c1]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[cc]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c8]"></a>HAL_UART_DeInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[ca]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>HAL_UART_Init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c9]"></a>HAL_UART_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>

<P><STRONG><a name="[d1]"></a>HAL_UART_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[161]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[160]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>

<P><STRONG><a name="[6b]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>LSM6DS0_ACC_GYRO_Get_Acceleration</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_Get_Acceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_ACC_GYRO_Get_Acceleration &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes_Raw
</UL>

<P><STRONG><a name="[de]"></a>LSM6DS0_ACC_GYRO_Get_AngularRate</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_Get_AngularRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_ACC_GYRO_Get_AngularRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes_Raw
</UL>

<P><STRONG><a name="[df]"></a>LSM6DS0_ACC_GYRO_R_AccelerometerAxisX</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_AccelerometerAxisX))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_AccelerometerAxisX &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[e0]"></a>LSM6DS0_ACC_GYRO_R_AccelerometerAxisY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_AccelerometerAxisY))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_AccelerometerAxisY &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[e1]"></a>LSM6DS0_ACC_GYRO_R_AccelerometerAxisZ</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_AccelerometerAxisZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_AccelerometerAxisZ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[e2]"></a>LSM6DS0_ACC_GYRO_R_AccelerometerDataRate</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_AccelerometerDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_ODR
</UL>

<P><STRONG><a name="[e3]"></a>LSM6DS0_ACC_GYRO_R_AccelerometerFullScale</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_AccelerometerFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_AccelerometerFullScale &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Sensitivity
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_FS
</UL>

<P><STRONG><a name="[e4]"></a>LSM6DS0_ACC_GYRO_R_GyroAxisX</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_GyroAxisX))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_GyroAxisX &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[e5]"></a>LSM6DS0_ACC_GYRO_R_GyroAxisY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_GyroAxisY))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_GyroAxisY &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[e6]"></a>LSM6DS0_ACC_GYRO_R_GyroAxisZ</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_GyroAxisZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_GyroAxisZ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[e7]"></a>LSM6DS0_ACC_GYRO_R_GyroDataRate</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_GyroDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_ODR
</UL>

<P><STRONG><a name="[e8]"></a>LSM6DS0_ACC_GYRO_R_GyroFullScale</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_GyroFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_GyroFullScale &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Sensitivity
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_FS
</UL>

<P><STRONG><a name="[e9]"></a>LSM6DS0_ACC_GYRO_R_WHO_AM_I_</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_R_WHO_AM_I_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Get_WhoAmI
</UL>

<P><STRONG><a name="[eb]"></a>LSM6DS0_ACC_GYRO_W_AccelerometerAxisX</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_AccelerometerAxisX))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_AccelerometerAxisX &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[ed]"></a>LSM6DS0_ACC_GYRO_W_AccelerometerAxisY</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_AccelerometerAxisY))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_AccelerometerAxisY &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[ee]"></a>LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[ef]"></a>LSM6DS0_ACC_GYRO_W_AccelerometerDataRate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_AccelerometerDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_When_Enabled
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value_When_Enabled
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Sensor_Disable
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Init
</UL>

<P><STRONG><a name="[f0]"></a>LSM6DS0_ACC_GYRO_W_AccelerometerFullScale</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_AccelerometerFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_AccelerometerFullScale &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_FS_Value
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_FS
</UL>

<P><STRONG><a name="[f1]"></a>LSM6DS0_ACC_GYRO_W_BlockDataUpdate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_BlockDataUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_BlockDataUpdate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Init
</UL>

<P><STRONG><a name="[f2]"></a>LSM6DS0_ACC_GYRO_W_GyroAxisX</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_GyroAxisX))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_GyroAxisX &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[f3]"></a>LSM6DS0_ACC_GYRO_W_GyroAxisY</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_GyroAxisY))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_GyroAxisY &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[f4]"></a>LSM6DS0_ACC_GYRO_W_GyroAxisZ</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_GyroAxisZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_GyroAxisZ &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[f5]"></a>LSM6DS0_ACC_GYRO_W_GyroDataRate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_GyroDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_When_Enabled
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Enabled
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Sensor_Disable
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Init
</UL>

<P><STRONG><a name="[f6]"></a>LSM6DS0_ACC_GYRO_W_GyroFullScale</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_W_GyroFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS0_ACC_GYRO_W_GyroFullScale &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_FS_Value
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_FS
</UL>

<P><STRONG><a name="[a5]"></a>LSM6DS0_Sensor_IO_ITConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_iks01a1.o(i.LSM6DS0_Sensor_IO_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS0_ACCELERO_Init
</UL>

<P><STRONG><a name="[108]"></a>LSM6DS3_ACC_GYRO_GetRawAccData</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_GetRawAccData))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Raw
</UL>

<P><STRONG><a name="[10a]"></a>LSM6DS3_ACC_GYRO_GetRawGyroData</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_GetRawGyroData))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Raw
</UL>

<P><STRONG><a name="[10b]"></a>LSM6DS3_ACC_GYRO_Get_GetStepCounter</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_Get_GetStepCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_ACC_GYRO_Get_GetStepCounter &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Step_Count
</UL>

<P><STRONG><a name="[10c]"></a>LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_Status
</UL>

<P><STRONG><a name="[10d]"></a>LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Double_Tap_Detection_Status
</UL>

<P><STRONG><a name="[10e]"></a>LSM6DS3_ACC_GYRO_R_DSD_XH</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_XH))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_XH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_XH
</UL>

<P><STRONG><a name="[10f]"></a>LSM6DS3_ACC_GYRO_R_DSD_XL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_XL
</UL>

<P><STRONG><a name="[110]"></a>LSM6DS3_ACC_GYRO_R_DSD_YH</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_YH))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_YH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_YH
</UL>

<P><STRONG><a name="[111]"></a>LSM6DS3_ACC_GYRO_R_DSD_YL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_YL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_YL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_YL
</UL>

<P><STRONG><a name="[112]"></a>LSM6DS3_ACC_GYRO_R_DSD_ZH</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_ZH))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_ZH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_ZH
</UL>

<P><STRONG><a name="[113]"></a>LSM6DS3_ACC_GYRO_R_DSD_ZL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_ZL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_ZL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_ZL
</UL>

<P><STRONG><a name="[114]"></a>LSM6DS3_ACC_GYRO_R_FF_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FF_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FF_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Free_Fall_Detection_Status
</UL>

<P><STRONG><a name="[115]"></a>LSM6DS3_ACC_GYRO_R_FS_125</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FS_125))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FS_125 &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Sensitivity
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_FS
</UL>

<P><STRONG><a name="[116]"></a>LSM6DS3_ACC_GYRO_R_FS_G</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FS_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FS_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Sensitivity
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_FS
</UL>

<P><STRONG><a name="[117]"></a>LSM6DS3_ACC_GYRO_R_FS_XL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FS_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FS_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Sensitivity
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_FS
</UL>

<P><STRONG><a name="[118]"></a>LSM6DS3_ACC_GYRO_R_ODR_G</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ODR_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_ODR
</UL>

<P><STRONG><a name="[119]"></a>LSM6DS3_ACC_GYRO_R_ODR_XL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ODR_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ODR_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_ODR
</UL>

<P><STRONG><a name="[11a]"></a>LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Pedometer_Status
</UL>

<P><STRONG><a name="[11b]"></a>LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Single_Tap_Detection_Status
</UL>

<P><STRONG><a name="[11c]"></a>LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Tilt_Detection_Status
</UL>

<P><STRONG><a name="[11d]"></a>LSM6DS3_ACC_GYRO_R_WHO_AM_I</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_WHO_AM_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>

<P><STRONG><a name="[11e]"></a>LSM6DS3_ACC_GYRO_R_WU_EV_STATUS</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_WU_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_WU_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Wake_Up_Detection_Status
</UL>

<P><STRONG><a name="[11f]"></a>LSM6DS3_ACC_GYRO_R_XEN_G</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_XEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_XEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[120]"></a>LSM6DS3_ACC_GYRO_R_XEN_XL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_XEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_XEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[121]"></a>LSM6DS3_ACC_GYRO_R_YEN_G</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_YEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_YEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[122]"></a>LSM6DS3_ACC_GYRO_R_YEN_XL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_YEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_YEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[123]"></a>LSM6DS3_ACC_GYRO_R_ZEN_G</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ZEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ZEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[124]"></a>LSM6DS3_ACC_GYRO_R_ZEN_XL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ZEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[125]"></a>LSM6DS3_ACC_GYRO_W_6DEvOnInt1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_6DEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_6DEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_6D_Orientation
</UL>

<P><STRONG><a name="[127]"></a>LSM6DS3_ACC_GYRO_W_BDU</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_BDU))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_BDU &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[128]"></a>LSM6DS3_ACC_GYRO_W_DUR</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Duration_Time
</UL>

<P><STRONG><a name="[129]"></a>LSM6DS3_ACC_GYRO_W_FFEvOnInt1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FFEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FFEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[12a]"></a>LSM6DS3_ACC_GYRO_W_FF_Duration</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FF_Duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FF_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[12b]"></a>LSM6DS3_ACC_GYRO_W_FF_THS</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FF_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FF_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Free_Fall_Threshold
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[12c]"></a>LSM6DS3_ACC_GYRO_W_FIFO_MODE</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FIFO_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FIFO_MODE &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[12d]"></a>LSM6DS3_ACC_GYRO_W_FS_125</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FS_125))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FS_125 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS_Value
</UL>

<P><STRONG><a name="[12e]"></a>LSM6DS3_ACC_GYRO_W_FS_G</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FS_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FS_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS_Value
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS
</UL>

<P><STRONG><a name="[12f]"></a>LSM6DS3_ACC_GYRO_W_FS_XL</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FS_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FS_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS_Value
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
</UL>

<P><STRONG><a name="[130]"></a>LSM6DS3_ACC_GYRO_W_FUNC_EN</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FUNC_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FUNC_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>

<P><STRONG><a name="[131]"></a>LSM6DS3_ACC_GYRO_W_IF_Addr_Incr</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_IF_Addr_Incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_IF_Addr_Incr &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[132]"></a>LSM6DS3_ACC_GYRO_W_ODR_G</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ODR_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_When_Enabled
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Disable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[133]"></a>LSM6DS3_ACC_GYRO_W_ODR_XL</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ODR_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_When_Enabled
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Disable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
</UL>

<P><STRONG><a name="[134]"></a>LSM6DS3_ACC_GYRO_W_Open_RAM_Page</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_Open_RAM_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
</UL>

<P><STRONG><a name="[135]"></a>LSM6DS3_ACC_GYRO_W_PEDO_EN</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PEDO_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PEDO_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>

<P><STRONG><a name="[136]"></a>LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>

<P><STRONG><a name="[137]"></a>LSM6DS3_ACC_GYRO_W_PedoStepReset</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PedoStepReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PedoStepReset &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Step_Counter_Reset
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Step_Counter_Reset
</UL>

<P><STRONG><a name="[138]"></a>LSM6DS3_ACC_GYRO_W_PedoThreshold</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PedoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_Open_RAM_Page
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Pedometer_Threshold
</UL>

<P><STRONG><a name="[139]"></a>LSM6DS3_ACC_GYRO_W_QUIET_Duration</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_QUIET_Duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_QUIET_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
</UL>

<P><STRONG><a name="[13a]"></a>LSM6DS3_ACC_GYRO_W_SHOCK_Duration</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SHOCK_Duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SHOCK_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
</UL>

<P><STRONG><a name="[13b]"></a>LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[13c]"></a>LSM6DS3_ACC_GYRO_W_SIXD_THS</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SIXD_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SIXD_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_6D_Orientation
</UL>

<P><STRONG><a name="[13d]"></a>LSM6DS3_ACC_GYRO_W_SLEEP_DUR</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SLEEP_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SLEEP_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[13e]"></a>LSM6DS3_ACC_GYRO_W_SingleTapOnInt1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SingleTapOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SingleTapOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
</UL>

<P><STRONG><a name="[13f]"></a>LSM6DS3_ACC_GYRO_W_TAP_THS</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
</UL>

<P><STRONG><a name="[140]"></a>LSM6DS3_ACC_GYRO_W_TAP_X_EN</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_X_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_X_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[141]"></a>LSM6DS3_ACC_GYRO_W_TAP_Y_EN</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_Y_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_Y_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[142]"></a>LSM6DS3_ACC_GYRO_W_TAP_Z_EN</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_Z_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_Z_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[143]"></a>LSM6DS3_ACC_GYRO_W_TILT_EN</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TILT_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TILT_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
</UL>

<P><STRONG><a name="[144]"></a>LSM6DS3_ACC_GYRO_W_TIMER_HR</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TIMER_HR))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TIMER_HR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[145]"></a>LSM6DS3_ACC_GYRO_W_TapEvOnInt1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TapEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TapEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[146]"></a>LSM6DS3_ACC_GYRO_W_TiltEvOnInt1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TiltEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TiltEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
</UL>

<P><STRONG><a name="[147]"></a>LSM6DS3_ACC_GYRO_W_WAKE_DUR</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_WAKE_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_WAKE_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
</UL>

<P><STRONG><a name="[148]"></a>LSM6DS3_ACC_GYRO_W_WK_THS</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_WK_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_WK_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Wake_Up_Threshold
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
</UL>

<P><STRONG><a name="[149]"></a>LSM6DS3_ACC_GYRO_W_WUEvOnInt1</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_WUEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_WUEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
</UL>

<P><STRONG><a name="[14a]"></a>LSM6DS3_ACC_GYRO_W_XEN_G</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_XEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_XEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[14b]"></a>LSM6DS3_ACC_GYRO_W_XEN_XL</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_XEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_XEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[14c]"></a>LSM6DS3_ACC_GYRO_W_YEN_G</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_YEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_YEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[14d]"></a>LSM6DS3_ACC_GYRO_W_YEN_XL</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_YEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_YEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[14e]"></a>LSM6DS3_ACC_GYRO_W_ZEN_G</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ZEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ZEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[14f]"></a>LSM6DS3_ACC_GYRO_W_ZEN_XL</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ZEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[a6]"></a>LSM6DS3_Sensor_IO_ITConfig</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, x_nucleo_iks01a1.o(i.LSM6DS3_Sensor_IO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DS3_Sensor_IO_ITConfig &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
</UL>

<P><STRONG><a name="[6a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>Sensor_IO_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, x_nucleo_iks01a1.o(i.Sensor_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS0_ACCELERO_Init
</UL>

<P><STRONG><a name="[ea]"></a>Sensor_IO_Read</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.Sensor_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_ReadReg
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>

<P><STRONG><a name="[f7]"></a>Sensor_IO_Write</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.Sensor_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_WriteReg
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
</UL>

<P><STRONG><a name="[6f]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[15d]"></a>SystemClock_Config</STRONG> (Thumb, 124 bytes, Stack size 80 bytes, clock_l0.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d4]"></a>UART_CheckIdleState</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d2]"></a>UART_SetConfig</STRONG> (Thumb, 924 bytes, Stack size 64 bytes, stm32l0xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = UART_SetConfig &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[15f]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, stm32l0xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[86]"></a>USART1_IRQHandler</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, main.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>USART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[164]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[191]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[171]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[166]"></a>__0sprintf$3</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[192]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[16e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[fd]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_When_Enabled
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_When_Disabled
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_ODR
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_When_Enabled
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_When_Disabled
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_ODR
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_When_Enabled
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_When_Disabled
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_ODR
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_When_Enabled
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_When_Disabled
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_ODR
</UL>

<P><STRONG><a name="[193]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[194]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[195]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[167]"></a>checkSIMStatus</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gprs_shield_arduino.o(i.checkSIMStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = checkSIMStatus &rArr; sim900_read_buffer &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_cmd
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_read_buffer
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_clean_buffer
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_init
</UL>

<P><STRONG><a name="[16d]"></a>connect</STRONG> (Thumb, 104 bytes, Stack size 280 bytes, gprs_shield_arduino.o(i.connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = connect &rArr; sim900_read_buffer &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_cmd
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_read_buffer
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16c]"></a>delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gprs_shield_arduino.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerUpDown
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSIMStatus
</UL>

<P><STRONG><a name="[8e]"></a>fputc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, debug.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[16f]"></a>gsm</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, gprs_shield_arduino.o(i.gsm))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gsm &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerUpDown
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[173]"></a>gsm_init</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, gprs_shield_arduino.o(i.gsm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gsm_init &rArr; sim900_check_with_cmd &rArr; sim900_wait_for_resp &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_with_cmd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSIMStatus
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
</UL>

<P><STRONG><a name="[175]"></a>is_connected</STRONG> (Thumb, 44 bytes, Stack size 104 bytes, gprs_shield_arduino.o(i.is_connected))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = is_connected &rArr; sim900_read_buffer &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_cmd
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_read_buffer
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>main</STRONG> (Thumb, 290 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = main &rArr; connect &rArr; sim900_read_buffer &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_connected
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[178]"></a>millis</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sim900.o(i.millis))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = millis
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_wait_for_resp
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_read_buffer
</UL>

<P><STRONG><a name="[172]"></a>powerUpDown</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gprs_shield_arduino.o(i.powerUpDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = powerUpDown &rArr; delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
</UL>

<P><STRONG><a name="[177]"></a>send</STRONG> (Thumb, 110 bytes, Stack size 88 bytes, gprs_shield_arduino.o(i.send))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = send &rArr; sim900_check_with_cmd &rArr; sim900_wait_for_resp &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_wait_for_resp
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_cmd
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_flush_serial
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_with_cmd
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17b]"></a>sim900_check_readable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sim900.o(i.sim900_check_readable))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_wait_for_resp
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_read_buffer
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_flush_serial
</UL>

<P><STRONG><a name="[174]"></a>sim900_check_with_cmd</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sim900.o(i.sim900_check_with_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = sim900_check_with_cmd &rArr; sim900_wait_for_resp &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_wait_for_resp
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[168]"></a>sim900_clean_buffer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sim900.o(i.sim900_clean_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSIMStatus
</UL>

<P><STRONG><a name="[179]"></a>sim900_flush_serial</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, sim900.o(i.sim900_flush_serial))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sim900_flush_serial
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_readable
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[170]"></a>sim900_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sim900.o(i.sim900_init))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm
</UL>

<P><STRONG><a name="[16a]"></a>sim900_read_buffer</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, sim900.o(i.sim900_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sim900_read_buffer &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_readable
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSIMStatus
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_connected
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
</UL>

<P><STRONG><a name="[17c]"></a>sim900_send_byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sim900.o(i.sim900_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_cmd
</UL>

<P><STRONG><a name="[169]"></a>sim900_send_cmd</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, sim900.o(i.sim900_send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sim900_send_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_with_cmd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSIMStatus
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_connected
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
</UL>

<P><STRONG><a name="[17a]"></a>sim900_wait_for_resp</STRONG> (Thumb, 100 bytes, Stack size 96 bytes, sim900.o(i.sim900_wait_for_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sim900_wait_for_resp &rArr; millis
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_readable
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim900_check_with_cmd
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a9]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32l0xx_nucleo.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[c2]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[cf]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndTransmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[cd]"></a>UART_Receive_IT</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, stm32l0xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>UART_Transmit_IT</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[db]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, stm32l0xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[b5]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32l0xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[ba]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32l0xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[b6]"></a>I2C_TransferConfig</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, stm32l0xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[b7]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, stm32l0xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[b8]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32l0xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[bb]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32l0xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[dd]"></a>LSM6DS0_ACC_GYRO_ReadReg</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroDataRate
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisZ
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisY
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisX
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_BlockDataUpdate
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerFullScale
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerDataRate
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisY
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisX
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_WHO_AM_I_
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroFullScale
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroDataRate
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroAxisZ
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroAxisY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroAxisX
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerFullScale
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerDataRate
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerAxisZ
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerAxisY
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerAxisX
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_Get_AngularRate
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_Get_Acceleration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroFullScale
</UL>

<P><STRONG><a name="[ec]"></a>LSM6DS0_ACC_GYRO_WriteReg</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver.o(i.LSM6DS0_ACC_GYRO_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroDataRate
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisZ
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisY
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisX
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_BlockDataUpdate
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerFullScale
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerDataRate
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisY
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisX
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroFullScale
</UL>

<P><STRONG><a name="[f8]"></a>LSM6DS0_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS0_Check_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_DeInit
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Check_WhoAmI
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_DeInit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Check_WhoAmI
</UL>

<P><STRONG><a name="[16]"></a>LSM6DS0_G_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_G_Check_WhoAmI &rArr; LSM6DS0_Check_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>LSM6DS0_G_DeInit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS0_G_DeInit &rArr; LSM6DS0_G_Sensor_Disable &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Sensor_Disable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>LSM6DS0_G_Get_Axes</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LSM6DS0_G_Get_Axes &rArr; LSM6DS0_G_Get_Axes_Raw &rArr; LSM6DS0_ACC_GYRO_Get_AngularRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Sensitivity
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>LSM6DS0_G_Get_AxesRaw</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LSM6DS0_G_Get_AxesRaw &rArr; LSM6DS0_G_Get_Axes_Raw &rArr; LSM6DS0_ACC_GYRO_Get_AngularRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[fa]"></a>LSM6DS0_G_Get_Axes_Raw</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_G_Get_Axes_Raw &rArr; LSM6DS0_ACC_GYRO_Get_AngularRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_Get_AngularRate
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_AxesRaw
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes
</UL>

<P><STRONG><a name="[20]"></a>LSM6DS0_G_Get_Axes_Status</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_G_Get_Axes_Status &rArr; LSM6DS0_ACC_GYRO_R_GyroAxisZ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroAxisZ
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroAxisY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroAxisX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>LSM6DS0_G_Get_FS</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_G_Get_FS &rArr; LSM6DS0_ACC_GYRO_R_GyroFullScale &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroFullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>LSM6DS0_G_Get_ODR</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroDataRate
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_When_Enabled
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Enabled
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>LSM6DS0_G_Get_Sensitivity</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_G_Get_Sensitivity &rArr; LSM6DS0_ACC_GYRO_R_GyroFullScale &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_GyroFullScale
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>LSM6DS0_G_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS0_G_Get_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>LSM6DS0_G_Init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS0_G_Init &rArr; LSM6DS0_Check_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroDataRate
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_BlockDataUpdate
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_FS
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_Axes_Status
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>LSM6DS0_G_Sensor_Disable</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS0_G_Sensor_Disable &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroDataRate
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>LSM6DS0_G_Sensor_Enable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS0_G_Sensor_Enable &rArr; LSM6DS0_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>LSM6DS0_G_Set_Axes_Status</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_G_Set_Axes_Status &rArr; LSM6DS0_ACC_GYRO_W_GyroAxisZ &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisZ
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisY
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroAxisX
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>LSM6DS0_G_Set_FS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_G_Set_FS &rArr; LSM6DS0_ACC_GYRO_W_GyroFullScale &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroFullScale
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>LSM6DS0_G_Set_FS_Value</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_G_Set_FS_Value &rArr; LSM6DS0_ACC_GYRO_W_GyroFullScale &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroFullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>LSM6DS0_G_Set_ODR</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS0_G_Set_ODR &rArr; LSM6DS0_G_Set_ODR_When_Enabled &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_When_Enabled
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>LSM6DS0_G_Set_ODR_Value</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS0_G_Set_ODR_Value &rArr; LSM6DS0_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Enabled
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[102]"></a>LSM6DS0_G_Set_ODR_Value_When_Disabled</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR_Value_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LSM6DS0_G_Set_ODR_Value_When_Disabled
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value
</UL>

<P><STRONG><a name="[fe]"></a>LSM6DS0_G_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroDataRate
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR_Value
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Sensor_Enable
</UL>

<P><STRONG><a name="[101]"></a>LSM6DS0_G_Set_ODR_When_Disabled</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LSM6DS0_G_Set_ODR_When_Disabled &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR
</UL>

<P><STRONG><a name="[100]"></a>LSM6DS0_G_Set_ODR_When_Enabled</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_G_Set_ODR_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_G_Set_ODR_When_Enabled &rArr; LSM6DS0_G_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_GyroDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_GyroDataRate
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Set_ODR
</UL>

<P><STRONG><a name="[f9]"></a>LSM6DS0_Get_WhoAmI</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_WHO_AM_I_
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_WhoAmI
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_G_Get_WhoAmI
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>

<P><STRONG><a name="[5]"></a>LSM6DS0_X_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_X_Check_WhoAmI &rArr; LSM6DS0_Check_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>LSM6DS0_X_DeInit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS0_X_DeInit &rArr; LSM6DS0_X_Sensor_Disable &rArr; LSM6DS0_X_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Sensor_Disable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>LSM6DS0_X_Get_Axes</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LSM6DS0_X_Get_Axes &rArr; LSM6DS0_X_Get_Axes_Raw &rArr; LSM6DS0_ACC_GYRO_Get_Acceleration &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Sensitivity
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>LSM6DS0_X_Get_AxesRaw</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LSM6DS0_X_Get_AxesRaw &rArr; LSM6DS0_X_Get_Axes_Raw &rArr; LSM6DS0_ACC_GYRO_Get_Acceleration &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[103]"></a>LSM6DS0_X_Get_Axes_Raw</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_X_Get_Axes_Raw &rArr; LSM6DS0_ACC_GYRO_Get_Acceleration &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_Get_Acceleration
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_AxesRaw
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes
</UL>

<P><STRONG><a name="[f]"></a>LSM6DS0_X_Get_Axes_Status</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Get_Axes_Status &rArr; LSM6DS0_ACC_GYRO_R_AccelerometerAxisZ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerAxisZ
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerAxisY
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerAxisX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>LSM6DS0_X_Get_FS</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_X_Get_FS &rArr; LSM6DS0_ACC_GYRO_R_AccelerometerFullScale &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerFullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>LSM6DS0_X_Get_ODR</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerDataRate
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>LSM6DS0_X_Get_Sensitivity</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS0_X_Get_Sensitivity &rArr; LSM6DS0_ACC_GYRO_R_AccelerometerFullScale &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_R_AccelerometerFullScale
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>LSM6DS0_X_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS0_X_Get_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>LSM6DS0_X_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS0_X_Init &rArr; LSM6DS0_Check_WhoAmI &rArr; LSM6DS0_Get_WhoAmI &rArr; LSM6DS0_ACC_GYRO_R_WHO_AM_I_ &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_BlockDataUpdate
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerDataRate
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_FS
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_Axes_Status
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>LSM6DS0_X_Sensor_Disable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_X_Sensor_Disable &rArr; LSM6DS0_X_Get_ODR &rArr; LSM6DS0_ACC_GYRO_R_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerDataRate
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>LSM6DS0_X_Sensor_Enable</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_X_Sensor_Enable &rArr; LSM6DS0_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>LSM6DS0_X_Set_Axes_Status</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Set_Axes_Status &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisZ
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisY
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerAxisX
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>LSM6DS0_X_Set_FS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Set_FS &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerFullScale &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerFullScale
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>LSM6DS0_X_Set_FS_Value</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Set_FS_Value &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerFullScale &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerFullScale
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>LSM6DS0_X_Set_ODR</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_X_Set_ODR &rArr; LSM6DS0_X_Set_ODR_When_Enabled &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_When_Enabled
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>LSM6DS0_X_Set_ODR_Value</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS0_X_Set_ODR_Value &rArr; LSM6DS0_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value_When_Enabled
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds0_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[107]"></a>LSM6DS0_X_Set_ODR_Value_When_Disabled</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR_Value_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LSM6DS0_X_Set_ODR_Value_When_Disabled
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value
</UL>

<P><STRONG><a name="[104]"></a>LSM6DS0_X_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerDataRate
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR_Value
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Sensor_Enable
</UL>

<P><STRONG><a name="[106]"></a>LSM6DS0_X_Set_ODR_When_Disabled</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LSM6DS0_X_Set_ODR_When_Disabled &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR
</UL>

<P><STRONG><a name="[105]"></a>LSM6DS0_X_Set_ODR_When_Enabled</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds0_acc_gyro_driver_hl.o(i.LSM6DS0_X_Set_ODR_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS0_X_Set_ODR_When_Enabled &rArr; LSM6DS0_ACC_GYRO_W_AccelerometerDataRate &rArr; LSM6DS0_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_ACC_GYRO_W_AccelerometerDataRate
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_X_Set_ODR
</UL>

<P><STRONG><a name="[109]"></a>LSM6DS3_ACC_GYRO_ReadReg</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_XL
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_G
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_XL
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_G
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_XL
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_G
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TIMER_HR
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_THS
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_Open_RAM_Page
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_125
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DUR
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_XL
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_G
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_XL
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_G
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_XL
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_G
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WU_EV_STATUS
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WHO_AM_I
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_XL
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_G
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_XL
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_G
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_125
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FF_EV_STATUS
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZL
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZH
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YL
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YH
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XL
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XH
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_Get_GetStepCounter
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawGyroData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawAccData
</UL>

<P><STRONG><a name="[126]"></a>LSM6DS3_ACC_GYRO_WriteReg</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_XL
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_G
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_XL
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_G
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_XL
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_G
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TIMER_HR
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_THS
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_Open_RAM_Page
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_125
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DUR
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
</UL>

<P><STRONG><a name="[150]"></a>LSM6DS3_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Check_WhoAmI
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_DeInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Check_WhoAmI
</UL>

<P><STRONG><a name="[5d]"></a>LSM6DS3_G_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_G_Check_WhoAmI &rArr; LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>LSM6DS3_G_DeInit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_G_DeInit &rArr; LSM6DS3_G_Sensor_Disable &rArr; LSM6DS3_G_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>LSM6DS3_G_Get_Axes</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LSM6DS3_G_Get_Axes &rArr; LSM6DS3_G_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Sensitivity
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>LSM6DS3_G_Get_AxesRaw</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LSM6DS3_G_Get_AxesRaw &rArr; LSM6DS3_G_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[152]"></a>LSM6DS3_G_Get_Axes_Raw</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_G_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawGyroData
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_AxesRaw
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[67]"></a>LSM6DS3_G_Get_Axes_Status</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Get_Axes_Status &rArr; LSM6DS3_ACC_GYRO_R_ZEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_G
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_G
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>LSM6DS3_G_Get_FS</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Get_FS &rArr; LSM6DS3_ACC_GYRO_R_FS_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_G
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_125
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>LSM6DS3_G_Get_ODR</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_G_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>LSM6DS3_G_Get_Sensitivity</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Get_Sensitivity &rArr; LSM6DS3_ACC_GYRO_R_FS_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_G
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_125
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>LSM6DS3_G_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_G_Get_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>LSM6DS3_G_Init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS3_G_Init &rArr; LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>LSM6DS3_G_Sensor_Disable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_G_Sensor_Disable &rArr; LSM6DS3_G_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_ODR
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>LSM6DS3_G_Sensor_Enable</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_G_Sensor_Enable &rArr; LSM6DS3_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>LSM6DS3_G_Set_Axes_Status</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Set_Axes_Status &rArr; LSM6DS3_ACC_GYRO_W_ZEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_G
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_G
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_G
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>LSM6DS3_G_Set_FS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Set_FS &rArr; LSM6DS3_ACC_GYRO_W_FS_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>LSM6DS3_G_Set_FS_Value</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Set_FS_Value &rArr; LSM6DS3_ACC_GYRO_W_FS_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_125
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>LSM6DS3_G_Set_ODR</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_G_Set_ODR &rArr; LSM6DS3_G_Set_ODR_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_When_Enabled
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>LSM6DS3_G_Set_ODR_Value</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_G_Set_ODR_Value &rArr; LSM6DS3_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[156]"></a>LSM6DS3_G_Set_ODR_Value_When_Disabled</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LSM6DS3_G_Set_ODR_Value_When_Disabled
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value
</UL>

<P><STRONG><a name="[153]"></a>LSM6DS3_G_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Enable
</UL>

<P><STRONG><a name="[155]"></a>LSM6DS3_G_Set_ODR_When_Disabled</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LSM6DS3_G_Set_ODR_When_Disabled &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR
</UL>

<P><STRONG><a name="[154]"></a>LSM6DS3_G_Set_ODR_When_Enabled</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Set_ODR_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR
</UL>

<P><STRONG><a name="[151]"></a>LSM6DS3_Get_WhoAmI</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WHO_AM_I
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_WhoAmI
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_WhoAmI
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>

<P><STRONG><a name="[4c]"></a>LSM6DS3_X_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Check_WhoAmI &rArr; LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>LSM6DS3_X_DeInit</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LSM6DS3_X_DeInit &rArr; LSM6DS3_X_Disable_Pedometer &rArr; LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Disable
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_6D_Orientation
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>LSM6DS3_X_Disable_6D_Orientation</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_6D_Orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Disable_6D_Orientation &rArr; LSM6DS3_ACC_GYRO_W_SIXD_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>LSM6DS3_X_Disable_Double_Tap_Detection</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Double_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_X_Disable_Double_Tap_Detection &rArr; LSM6DS3_X_Set_Tap_Threshold &rArr; LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Duration_Time
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>LSM6DS3_X_Disable_Free_Fall_Detection</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Free_Fall_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Disable_Free_Fall_Detection &rArr; LSM6DS3_ACC_GYRO_W_FF_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>LSM6DS3_X_Disable_Pedometer</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Pedometer))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Disable_Pedometer &rArr; LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Pedometer_Threshold
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>LSM6DS3_X_Disable_Single_Tap_Detection</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Single_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_X_Disable_Single_Tap_Detection &rArr; LSM6DS3_X_Set_Tap_Threshold &rArr; LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>LSM6DS3_X_Disable_Step_Counter_Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Step_Counter_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Disable_Step_Counter_Reset &rArr; LSM6DS3_ACC_GYRO_W_PedoStepReset &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>LSM6DS3_X_Disable_Tilt_Detection</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Tilt_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Disable_Tilt_Detection &rArr; LSM6DS3_ACC_GYRO_W_TiltEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>LSM6DS3_X_Disable_Wake_Up_Detection</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Wake_Up_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Disable_Wake_Up_Detection &rArr; LSM6DS3_ACC_GYRO_W_WUEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>LSM6DS3_X_Enable_6D_Orientation</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_6D_Orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_6D_Orientation &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>LSM6DS3_X_Enable_Double_Tap_Detection</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Double_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_Double_Tap_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Duration_Time
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>LSM6DS3_X_Enable_Free_Fall_Detection</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Free_Fall_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_Free_Fall_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Free_Fall_Threshold
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TIMER_HR
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>LSM6DS3_X_Enable_Pedometer</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Pedometer))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_Pedometer &rArr; LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Pedometer_Threshold
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>LSM6DS3_X_Enable_Single_Tap_Detection</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Single_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_Single_Tap_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>LSM6DS3_X_Enable_Step_Counter_Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Step_Counter_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_Step_Counter_Reset &rArr; LSM6DS3_ACC_GYRO_W_PedoStepReset &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>LSM6DS3_X_Enable_Tilt_Detection</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Tilt_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_Tilt_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>LSM6DS3_X_Enable_Wake_Up_Detection</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Wake_Up_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LSM6DS3_X_Enable_Wake_Up_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>LSM6DS3_X_Get_6D_Orientation_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_Status &rArr; LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>LSM6DS3_X_Get_6D_Orientation_XH</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XH))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_XH &rArr; LSM6DS3_ACC_GYRO_R_DSD_XH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>LSM6DS3_X_Get_6D_Orientation_XL</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_XL &rArr; LSM6DS3_ACC_GYRO_R_DSD_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>LSM6DS3_X_Get_6D_Orientation_YH</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YH))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_YH &rArr; LSM6DS3_ACC_GYRO_R_DSD_YH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>LSM6DS3_X_Get_6D_Orientation_YL</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YL))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_YL &rArr; LSM6DS3_ACC_GYRO_R_DSD_YL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>LSM6DS3_X_Get_6D_Orientation_ZH</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZH))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_ZH &rArr; LSM6DS3_ACC_GYRO_R_DSD_ZH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>LSM6DS3_X_Get_6D_Orientation_ZL</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZL))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_ZL &rArr; LSM6DS3_ACC_GYRO_R_DSD_ZL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>LSM6DS3_X_Get_Axes</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LSM6DS3_X_Get_Axes &rArr; LSM6DS3_X_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Sensitivity
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Raw
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>LSM6DS3_X_Get_AxesRaw</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LSM6DS3_X_Get_AxesRaw &rArr; LSM6DS3_X_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[157]"></a>LSM6DS3_X_Get_Axes_Raw</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawAccData
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_AxesRaw
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
</UL>

<P><STRONG><a name="[56]"></a>LSM6DS3_X_Get_Axes_Status</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Get_Axes_Status &rArr; LSM6DS3_ACC_GYRO_R_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_XL
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_XL
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>LSM6DS3_X_Get_Double_Tap_Detection_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Double_Tap_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Double_Tap_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>LSM6DS3_X_Get_FS</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_FS &rArr; LSM6DS3_ACC_GYRO_R_FS_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>LSM6DS3_X_Get_Free_Fall_Detection_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Free_Fall_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Free_Fall_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_FF_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FF_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>LSM6DS3_X_Get_ODR</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>LSM6DS3_X_Get_Pedometer_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Pedometer_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Pedometer_Status &rArr; LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>LSM6DS3_X_Get_Sensitivity</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Sensitivity &rArr; LSM6DS3_ACC_GYRO_R_FS_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>LSM6DS3_X_Get_Single_Tap_Detection_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Single_Tap_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Single_Tap_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>LSM6DS3_X_Get_Step_Count</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Step_Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_X_Get_Step_Count &rArr; LSM6DS3_ACC_GYRO_Get_GetStepCounter &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_Get_GetStepCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>LSM6DS3_X_Get_Tilt_Detection_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Tilt_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Tilt_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>LSM6DS3_X_Get_Wake_Up_Detection_Status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Wake_Up_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Wake_Up_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_WU_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WU_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>LSM6DS3_X_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_X_Get_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>LSM6DS3_X_Init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LSM6DS3_X_Init &rArr; LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>LSM6DS3_X_Sensor_Disable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_X_Sensor_Disable &rArr; LSM6DS3_X_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_ODR
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>LSM6DS3_X_Sensor_Enable</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Sensor_Enable &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>LSM6DS3_X_Set_Axes_Status</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Axes_Status &rArr; LSM6DS3_ACC_GYRO_W_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_XL
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_XL
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>LSM6DS3_X_Set_FS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_FS &rArr; LSM6DS3_ACC_GYRO_W_FS_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>LSM6DS3_X_Set_FS_Value</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_FS_Value &rArr; LSM6DS3_ACC_GYRO_W_FS_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>LSM6DS3_X_Set_Free_Fall_Threshold</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Free_Fall_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Free_Fall_Threshold &rArr; LSM6DS3_ACC_GYRO_W_FF_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>LSM6DS3_X_Set_ODR</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Set_ODR &rArr; LSM6DS3_X_Set_ODR_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_When_Enabled
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>LSM6DS3_X_Set_ODR_Value</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Disabled
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[15b]"></a>LSM6DS3_X_Set_ODR_Value_When_Disabled</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LSM6DS3_X_Set_ODR_Value_When_Disabled
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
</UL>

<P><STRONG><a name="[158]"></a>LSM6DS3_X_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Enable
</UL>

<P><STRONG><a name="[15a]"></a>LSM6DS3_X_Set_ODR_When_Disabled</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LSM6DS3_X_Set_ODR_When_Disabled &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR
</UL>

<P><STRONG><a name="[159]"></a>LSM6DS3_X_Set_ODR_When_Enabled</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_ODR_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR
</UL>

<P><STRONG><a name="[2c]"></a>LSM6DS3_X_Set_Pedometer_Threshold</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Pedometer_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>LSM6DS3_X_Set_Tap_Duration_Time</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Duration_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Tap_Duration_Time &rArr; LSM6DS3_ACC_GYRO_W_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DUR
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>LSM6DS3_X_Set_Tap_Quiet_Time</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Quiet_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Tap_Quiet_Time &rArr; LSM6DS3_ACC_GYRO_W_QUIET_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_QUIET_Duration
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>LSM6DS3_X_Set_Tap_Shock_Time</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Shock_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Tap_Shock_Time &rArr; LSM6DS3_ACC_GYRO_W_SHOCK_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SHOCK_Duration
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>LSM6DS3_X_Set_Tap_Threshold</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Tap_Threshold &rArr; LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_THS
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>LSM6DS3_X_Set_Wake_Up_Threshold</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Wake_Up_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Set_Wake_Up_Threshold &rArr; LSM6DS3_ACC_GYRO_W_WK_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[d5]"></a>I2C_EXPBD_Error</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_EXPBD_Error &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_WriteData
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_ReadData
</UL>

<P><STRONG><a name="[d6]"></a>I2C_EXPBD_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>

<P><STRONG><a name="[d8]"></a>I2C_EXPBD_MspInit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>

<P><STRONG><a name="[d9]"></a>I2C_EXPBD_ReadData</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[da]"></a>I2C_EXPBD_WriteData</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>

<P><STRONG><a name="[a3]"></a>BSP_LSM6DS0_ACCELERO_Init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, x_nucleo_iks01a1_accelero.o(i.BSP_LSM6DS0_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LSM6DS0_ACCELERO_Init &rArr; Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS0_Sensor_IO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
</UL>

<P><STRONG><a name="[a2]"></a>BSP_LSM6DS3_ACCELERO_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, x_nucleo_iks01a1_accelero.o(i.BSP_LSM6DS3_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_LSM6DS3_ACCELERO_Init &rArr; LSM6DS3_Sensor_IO_ITConfig &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
</UL>

<P><STRONG><a name="[165]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>

<P><STRONG><a name="[8f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
